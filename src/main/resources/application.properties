spring.application.name=CareCode

# API 설정
app.api.base-url=/api/v1
app.api.version=v1
app.api.title=맘편한 API
app.api.description=육아 지원 플랫폼 맘편한의 REST API

# 서버 설정
server.port=8080
server.servlet.context-path=/

# ===============================
# JWT 설정
# ===============================
# JWT 시크릿 키 (운영 환경에서는 환경 변수로 관리)
jwt.secret=carecode-super-secret-jwt-key-for-production-use-change-this-in-production
# Access Token 만료 시간 (밀리초) - 1시간
jwt.access-token.expiration=3600000
# Refresh Token 만료 시간 (밀리초) - 30일
jwt.refresh-token.expiration=2592000000

# ===============================
# Swagger/OpenAPI 3 설정
# ===============================
# Swagger UI 활성화
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

# API 문서 경로
springdoc.api-docs.path=/api-docs

# 패키지 스캔 설정
springdoc.packages-to-scan=com.carecode.domain

# 보안 설정 (Spring Security와 함께 사용)
springdoc.default-consumes-media-type=application/json
springdoc.default-produces-media-type=application/json

# 로깅 설정
#logging.level.com.carecode=INFO
#logging.level.com.carecode.core.security=DEBUG
#logging.level.com.carecode.domain.user.service.JwtService=DEBUG
#logging.level.org.springframework.security=DEBUG
#logging.level.org.springframework.web=INFO
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Spring Batch 자동 설정 비활성화
spring.batch.job.enabled=false
spring.batch.jdbc.initialize-schema=never

# Redis 자동 설정 비활성화
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration

# ===============================
# Redis 연결 설정
# ===============================
spring.redis.host=localhost
spring.redis.port=6379

# ===============================
# MariaDB Database Configuration
# ===============================
spring.datasource.url=jdbc:mariadb://localhost:3306/carecode
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# ===============================
# JPA & Hibernate Configuration
# ===============================
# JPA ???? Hibernate ??
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect

# ??? ?? ??/???? ??
spring.jpa.hibernate.ddl-auto=update

# SQL ?? ??
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Naming ?? (CamelCase ? snake_case)
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

# ===============================
# HikariCP (Connection Pool) ??
# ===============================
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1800000

# ===============================
# OAuth2 소셜 로그인 설정
# ===============================
# Google OAuth2 (설정 필요 시)
spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=profile,email

# Kakao OAuth2 설정
spring.security.oauth2.client.registration.kakao.client-id=4a381e3464653dfbbcea2a184bd24a0c
spring.security.oauth2.client.registration.kakao.client-secret=3MyPCgFIWttFBED3cRPM6fnIFNvCLXq5
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post

# Kakao OAuth2 Provider 설정
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# ===============================
# 이메일 인증 SMTP 설정 예시
# ===============================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=dhxogns920@gmail.com
spring.mail.password=ssqlsoankvimhnuz
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ===============================
# 공공데이터 API 설정
# ===============================
# 공공데이터 포털 API 키 (실제 API 키로 교체 필요)
public.data.api.key=YOUR_PUBLIC_DATA_API_KEY
# 공공데이터 포털 기본 URL
public.data.api.base-url=https://api.data.go.kr/openapi
